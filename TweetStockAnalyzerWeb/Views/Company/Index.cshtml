@model TweetStockAnalyzerWeb.ViewModel.Company.CompanyIndexViewModel

@{
    ViewBag.Title = "CompanyList";
}


<h2>Company</h2>
@MessageHelper.SuccessMessage(Model.SuccessMessage)

<button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Create")'">
    <span class="glyphicon glyphicon-plus"></span>Add
</button>
<span style="float:right">このへんにフィルターとかソートをつける</span>
@{
    foreach (var company in Model.Companies)
    {
        <div class="border-box bottom-margin">
            <p>
                <b>@Html.ActionLink(company.CompanyName, "Detail", new { companyId = company.CompanyId })</b>
                @if (company.Stock != null)
                {
                    <span><a href='@string.Format("http://stocks.finance.yahoo.co.jp/stocks/detail/?code={0}",company.Stock.StockCode)'>(@company.Stock.StockCode)</a></span>
                }
                <span class="align-right">
                    @Html.ActionLink("Modify", "Update", new { companyId = company.CompanyId })
                    |
                    @Html.ActionLink(
                    "Delete",
                    "Delete",
                    new { companyId = company.CompanyId },
                    new { onclick = "return confirm('Are you sure you wish to delete this company?');" })
                </span>
                @if (company.CompanyScores != null && company.CompanyScores.Count > 0)
                {
                    <span class="margin-left">Score:@company.CompanyScores.OrderBy(s => s.RegisterDate).Last().Score</span>
                }
            </p>
            @if (company.CompanyScores != null && company.CompanyScores.Count > 0)
            {
                <p>
                    @ChartHelper.ScoreChart("Score Chart", company.CompanyScores.ToDictionary(c => c.RegisterDate, c => (double)c.Score))
                </p>
            }
        </div>
    }
}